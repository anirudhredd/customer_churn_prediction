rm(list = ls())
packages <- c("caret", "rpart", "randomForest","corrplot", "gbm", "ROCR", "dplyr", "ggplot2")
new_packages <- packages[!packages %in% installed.packages()[, "Package"]]
if (length(new_packages) > 0) install.packages(new_packages)
lapply(packages, library, character.only = TRUE)
churn_data <- read.csv("C:/Users/aniru/OneDrive/Desktop/spring24/PA/group project/Churn_Modelling.csv")
print(head(churn_data))
print(colnames(churn_data))
# Data preprocessing
# Remove unnecessary columns
churn_data <- subset(churn_data, select = -c(RowNumber, CustomerId, Surname))
# Checking for and summarize missing data
missing_data_summary <- sapply(churn_data, function(x) sum(is.na(x)))
print("Summary of missing data:")
print(missing_data_summary)
# Convert categorical variables to factors with explicit naming for levels
churn_data$Geography <- as.factor(churn_data$Geography)
churn_data$Gender    <- as.factor(churn_data$Gender)
churn_data$Exited    <- factor(churn_data$Exited, levels = c(0, 1), labels = c("No", "Yes"))
print(churn_data$Exited)
# Generate summary statistics for numerical features
summary_stats <- churn_data %>%
summarise(
mean_age = mean(Age, na.rm = TRUE),
median_age = median(Age, na.rm = TRUE),
sd_age = sd(Age, na.rm = TRUE),
mean_balance = mean(Balance, na.rm = TRUE),
median_balance = median(Balance, na.rm = TRUE),
sd_balance = sd(Balance, na.rm = TRUE)
)
print(summary_stats)
# EDA
# Define the color palette
grey_blue <- "#5A92A5"
colors <- c("No" = grey_blue, "Yes" = "darkgrey")
# Histogram for Age Distribution
ggplot(churn_data, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "#5A92A5", color = "black") +
labs(title = "Age Distribution", x = "Age", y = "Count") +
theme_minimal()
# Histogram of Churn by Age
ggplot(churn_data, aes(x = Age, fill = Exited)) +
geom_histogram(bins = 20, position = "stack", alpha = 0.7) +  # Added transparency for visibility
scale_fill_manual(values = c("No" = "#5A92A5", "Yes" = "darkgrey")) +  # Define your own colors if needed
labs(title = "Distribution of Churn by Age", x = "Age", y = "Count", fill = "Exited Status") +
theme_minimal()
# Box Plot for Balance by Geography
ggplot(churn_data, aes(x = Geography, y = Balance)) +
geom_boxplot(fill = "#5A92A5") +
labs(title = "Box Plot of Balance by Geography", x = "Geography", y = "Balance") +
theme_minimal()
# Scatter Plot for Age vs. Balance, colored by Exited
ggplot(churn_data, aes(x = Age, y = Balance, color = Exited)) +
geom_point(alpha = 0.7) +
scale_color_manual(values = colors) +
labs(title = "Age vs. Balance", x = "Age", y = "Balance", color = "Exited") +
theme_minimal()
# Correlation Heatmap
# Select numeric columns only for correlation analysis
numeric_data <- churn_data %>%
select_if(is.numeric)  # Ensures only numeric columns are selected
# Calculate correlation matrix
correlation_matrix <- cor(numeric_data, use = "complete.obs")
# Plot correlation heatmap
corrplot(correlation_matrix, method = "color", type = "upper", tl.col = "black", addCoef.col = "black")
